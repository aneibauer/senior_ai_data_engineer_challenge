version: '3.8'

services:

  pulsar:
    image: apachepulsar/pulsar:4.0.5
    container_name: pulsar
    command: bin/pulsar standalone
    ports:
      - "6650:6650"
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/admin/v2/clusters"]
      interval: 10s
      timeout: 5s
      retries: 5

  spark:
    image: bitnami/spark:3.5.0
    container_name: spark
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"   # Spark master port
      - "8081:8081"   # Spark master web UI

  spark-worker:
    image: bitnami/spark:3.5.0
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
    depends_on:
      - spark

  data-generator:
    build:
      context: .
      dockerfile: Dockerfile  # Youâ€™ll need a Dockerfile to install deps & run stream_processor
    depends_on:
      - pulsar
    command: python -m stream_processor  # or whatever CLI entry runs your burst/event loop

  # postgres:
  #   image: postgres:15
  #   container_name: postgres
  #   environment:
  #     POSTGRES_USER: user
  #     POSTGRES_PASSWORD: password
  #     POSTGRES_DB: events
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data

  # fastapi:
  #   build:
  #     context: ./api
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - postgres

  # prometheus:
  #   image: prom/prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml

  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - prometheus

# volumes:
#   postgres_data: